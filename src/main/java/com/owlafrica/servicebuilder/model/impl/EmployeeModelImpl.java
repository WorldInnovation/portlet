package com.owlafrica.servicebuilder.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.owlafrica.servicebuilder.model.Employee;
import com.owlafrica.servicebuilder.model.EmployeeModel;
import com.owlafrica.servicebuilder.model.EmployeeSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Employee service. Represents a row in the &quot;Employee&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.owlafrica.servicebuilder.model.EmployeeModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EmployeeImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see EmployeeImpl
 * @see com.owlafrica.servicebuilder.model.Employee
 * @see com.owlafrica.servicebuilder.model.EmployeeModel
 * @generated
 */
@JSON(strict = true)
public class EmployeeModelImpl extends BaseModelImpl<Employee>
    implements EmployeeModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a employee model instance should use the {@link com.owlafrica.servicebuilder.model.Employee} interface instead.
     */
    public static final String TABLE_NAME = "Employee";
    public static final Object[][] TABLE_COLUMNS = {
            { "Employee_id", Types.BIGINT },
            { "birthday", Types.TIMESTAMP },
            { "eMail", Types.VARCHAR },
            { "firstName", Types.VARCHAR },
            { "secondName", Types.VARCHAR },
            { "grade", Types.INTEGER },
            { "depID", Types.BIGINT }
        };
    public static final String TABLE_SQL_CREATE = "create table Employee (Employee_id LONG not null primary key,birthday DATE null,eMail VARCHAR(75) null,firstName VARCHAR(75) null,secondName VARCHAR(75) null,grade INTEGER,depID LONG)";
    public static final String TABLE_SQL_DROP = "drop table Employee";
    public static final String ORDER_BY_JPQL = " ORDER BY employee.id ASC";
    public static final String ORDER_BY_SQL = " ORDER BY Employee.Employee_id ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.owlafrica.servicebuilder.model.Employee"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.owlafrica.servicebuilder.model.Employee"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.owlafrica.servicebuilder.model.Employee"));
    private static ClassLoader _classLoader = Employee.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            Employee.class
        };
    private long _id;
    private Date _birthday;
    private String _eMail;
    private String _firstName;
    private String _secondName;
    private int _grade;
    private long _depID;
    private Employee _escapedModel;

    public EmployeeModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static Employee toModel(EmployeeSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        Employee model = new EmployeeImpl();

        model.setId(soapModel.getId());
        model.setBirthday(soapModel.getBirthday());
        model.setEMail(soapModel.getEMail());
        model.setFirstName(soapModel.getFirstName());
        model.setSecondName(soapModel.getSecondName());
        model.setGrade(soapModel.getGrade());
        model.setDepID(soapModel.getDepID());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<Employee> toModels(EmployeeSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<Employee> models = new ArrayList<Employee>(soapModels.length);

        for (EmployeeSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public long getPrimaryKey() {
        return _id;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _id;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Employee.class;
    }

    @Override
    public String getModelClassName() {
        return Employee.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("id", getId());
        attributes.put("birthday", getBirthday());
        attributes.put("eMail", getEMail());
        attributes.put("firstName", getFirstName());
        attributes.put("secondName", getSecondName());
        attributes.put("grade", getGrade());
        attributes.put("depID", getDepID());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long id = (Long) attributes.get("id");

        if (id != null) {
            setId(id);
        }

        Date birthday = (Date) attributes.get("birthday");

        if (birthday != null) {
            setBirthday(birthday);
        }

        String eMail = (String) attributes.get("eMail");

        if (eMail != null) {
            setEMail(eMail);
        }

        String firstName = (String) attributes.get("firstName");

        if (firstName != null) {
            setFirstName(firstName);
        }

        String secondName = (String) attributes.get("secondName");

        if (secondName != null) {
            setSecondName(secondName);
        }

        Integer grade = (Integer) attributes.get("grade");

        if (grade != null) {
            setGrade(grade);
        }

        Long depID = (Long) attributes.get("depID");

        if (depID != null) {
            setDepID(depID);
        }
    }

    @JSON
    @Override
    public long getId() {
        return _id;
    }

    @Override
    public void setId(long id) {
        _id = id;
    }

    @JSON
    @Override
    public Date getBirthday() {
        return _birthday;
    }

    @Override
    public void setBirthday(Date birthday) {
        _birthday = birthday;
    }

    @JSON
    @Override
    public String getEMail() {
        if (_eMail == null) {
            return StringPool.BLANK;
        } else {
            return _eMail;
        }
    }

    @Override
    public void setEMail(String eMail) {
        _eMail = eMail;
    }

    @JSON
    @Override
    public String getFirstName() {
        if (_firstName == null) {
            return StringPool.BLANK;
        } else {
            return _firstName;
        }
    }

    @Override
    public void setFirstName(String firstName) {
        _firstName = firstName;
    }

    @JSON
    @Override
    public String getSecondName() {
        if (_secondName == null) {
            return StringPool.BLANK;
        } else {
            return _secondName;
        }
    }

    @Override
    public void setSecondName(String secondName) {
        _secondName = secondName;
    }

    @JSON
    @Override
    public int getGrade() {
        return _grade;
    }

    @Override
    public void setGrade(int grade) {
        _grade = grade;
    }

    @JSON
    @Override
    public long getDepID() {
        return _depID;
    }

    @Override
    public void setDepID(long depID) {
        _depID = depID;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            Employee.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public Employee toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Employee) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        EmployeeImpl employeeImpl = new EmployeeImpl();

        employeeImpl.setId(getId());
        employeeImpl.setBirthday(getBirthday());
        employeeImpl.setEMail(getEMail());
        employeeImpl.setFirstName(getFirstName());
        employeeImpl.setSecondName(getSecondName());
        employeeImpl.setGrade(getGrade());
        employeeImpl.setDepID(getDepID());

        employeeImpl.resetOriginalValues();

        return employeeImpl;
    }

    @Override
    public int compareTo(Employee employee) {
        long primaryKey = employee.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Employee)) {
            return false;
        }

        Employee employee = (Employee) obj;

        long primaryKey = employee.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<Employee> toCacheModel() {
        EmployeeCacheModel employeeCacheModel = new EmployeeCacheModel();

        employeeCacheModel.id = getId();

        Date birthday = getBirthday();

        if (birthday != null) {
            employeeCacheModel.birthday = birthday.getTime();
        } else {
            employeeCacheModel.birthday = Long.MIN_VALUE;
        }

        employeeCacheModel.eMail = getEMail();

        String eMail = employeeCacheModel.eMail;

        if ((eMail != null) && (eMail.length() == 0)) {
            employeeCacheModel.eMail = null;
        }

        employeeCacheModel.firstName = getFirstName();

        String firstName = employeeCacheModel.firstName;

        if ((firstName != null) && (firstName.length() == 0)) {
            employeeCacheModel.firstName = null;
        }

        employeeCacheModel.secondName = getSecondName();

        String secondName = employeeCacheModel.secondName;

        if ((secondName != null) && (secondName.length() == 0)) {
            employeeCacheModel.secondName = null;
        }

        employeeCacheModel.grade = getGrade();

        employeeCacheModel.depID = getDepID();

        return employeeCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(15);

        sb.append("{id=");
        sb.append(getId());
        sb.append(", birthday=");
        sb.append(getBirthday());
        sb.append(", eMail=");
        sb.append(getEMail());
        sb.append(", firstName=");
        sb.append(getFirstName());
        sb.append(", secondName=");
        sb.append(getSecondName());
        sb.append(", grade=");
        sb.append(getGrade());
        sb.append(", depID=");
        sb.append(getDepID());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(25);

        sb.append("<model><model-name>");
        sb.append("com.owlafrica.servicebuilder.model.Employee");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>id</column-name><column-value><![CDATA[");
        sb.append(getId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>birthday</column-name><column-value><![CDATA[");
        sb.append(getBirthday());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>eMail</column-name><column-value><![CDATA[");
        sb.append(getEMail());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>firstName</column-name><column-value><![CDATA[");
        sb.append(getFirstName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>secondName</column-name><column-value><![CDATA[");
        sb.append(getSecondName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>grade</column-name><column-value><![CDATA[");
        sb.append(getGrade());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>depID</column-name><column-value><![CDATA[");
        sb.append(getDepID());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
