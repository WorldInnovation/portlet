package com.owlafrica.servicebuilder.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.owlafrica.servicebuilder.model.Dep;
import com.owlafrica.servicebuilder.model.DepModel;
import com.owlafrica.servicebuilder.model.DepSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Dep service. Represents a row in the &quot;Dep&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.owlafrica.servicebuilder.model.DepModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DepImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see DepImpl
 * @see com.owlafrica.servicebuilder.model.Dep
 * @see com.owlafrica.servicebuilder.model.DepModel
 * @generated
 */
@JSON(strict = true)
public class DepModelImpl extends BaseModelImpl<Dep> implements DepModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a dep model instance should use the {@link com.owlafrica.servicebuilder.model.Dep} interface instead.
     */
    public static final String TABLE_NAME = "Dep";
    public static final Object[][] TABLE_COLUMNS = {
            { "Dep_id", Types.BIGINT },
            { "Dep_name", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table Dep (Dep_id LONG not null primary key,Dep_name VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table Dep";
    public static final String ORDER_BY_JPQL = " ORDER BY dep.id ASC";
    public static final String ORDER_BY_SQL = " ORDER BY Dep.Dep_id ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.owlafrica.servicebuilder.model.Dep"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.owlafrica.servicebuilder.model.Dep"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.owlafrica.servicebuilder.model.Dep"));
    private static ClassLoader _classLoader = Dep.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] { Dep.class };
    private long _id;
    private String _name;
    private Dep _escapedModel;

    public DepModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static Dep toModel(DepSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        Dep model = new DepImpl();

        model.setId(soapModel.getId());
        model.setName(soapModel.getName());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<Dep> toModels(DepSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<Dep> models = new ArrayList<Dep>(soapModels.length);

        for (DepSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public long getPrimaryKey() {
        return _id;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _id;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Dep.class;
    }

    @Override
    public String getModelClassName() {
        return Dep.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("id", getId());
        attributes.put("name", getName());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long id = (Long) attributes.get("id");

        if (id != null) {
            setId(id);
        }

        String name = (String) attributes.get("name");

        if (name != null) {
            setName(name);
        }
    }

    @JSON
    @Override
    public long getId() {
        return _id;
    }

    @Override
    public void setId(long id) {
        _id = id;
    }

    @JSON
    @Override
    public String getName() {
        if (_name == null) {
            return StringPool.BLANK;
        } else {
            return _name;
        }
    }

    @Override
    public void setName(String name) {
        _name = name;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            Dep.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public Dep toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Dep) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        DepImpl depImpl = new DepImpl();

        depImpl.setId(getId());
        depImpl.setName(getName());

        depImpl.resetOriginalValues();

        return depImpl;
    }

    @Override
    public int compareTo(Dep dep) {
        long primaryKey = dep.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Dep)) {
            return false;
        }

        Dep dep = (Dep) obj;

        long primaryKey = dep.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<Dep> toCacheModel() {
        DepCacheModel depCacheModel = new DepCacheModel();

        depCacheModel.id = getId();

        depCacheModel.name = getName();

        String name = depCacheModel.name;

        if ((name != null) && (name.length() == 0)) {
            depCacheModel.name = null;
        }

        return depCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(5);

        sb.append("{id=");
        sb.append(getId());
        sb.append(", name=");
        sb.append(getName());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(10);

        sb.append("<model><model-name>");
        sb.append("com.owlafrica.servicebuilder.model.Dep");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>id</column-name><column-value><![CDATA[");
        sb.append(getId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>name</column-name><column-value><![CDATA[");
        sb.append(getName());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
